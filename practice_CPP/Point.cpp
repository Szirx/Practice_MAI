#include <windows.h>
#include "Point.h"	//объявление классов
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
/*   Г Л О Б А Л Ь Н Ы Е   П Е Р Е М Е Н Н Ы Е  И  К О Н С Т А Н Т Ы   */
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
//внешнее обявление глобальной переменной
extern HDC hdc;      // объявим  контекст устройства

/*-----------------------------------------------------------------------*/
/*                 Р Е А Л И З А Ц И Я    М Е Т О Д О В                  */
/*-----------------------------------------------------------------------*/

/*-----------------------------------------------------------------------*/
/*        МЕТОДЫ КЛАССА Point             */
/*----------------------------------------*/
//конструктор
//для инициализации закрытых полей используем конструктор предка
Point::Point(int InitX1, int InitY1) : Location(InitX1, InitY1)
{
	//инициализация закрытых переменных своего класса
	Visible = false;
}//end Point::Point()

 //--------------------------------------------------------------
 //деструктор
Point::~Point(void)   //формально пустое тело
{
}//end Point::~Point()

 //--------------------------------------------------------------
 //показать ТОЧКУ
void Point::Show(void)
{
	Visible = true;
	SetPixel(hdc, X1, Y1, RGB(255, 0, 0));	//рисуем красным цветом
	SetPixel(hdc, X1 + 1, Y1, RGB(255, 0, 0));	// 4 точки для удобства
	SetPixel(hdc, X1, Y1 + 1, RGB(255, 0, 0));
	SetPixel(hdc, X1 + 1, Y1 + 1, RGB(255, 0, 0));
}//end Point::Show()

 //--------------------------------------------------------------
 //скрыть ТОЧКУ
void Point::Hide(void)
{
	Visible = false;

	SetPixel(hdc, X1, Y1, RGB(0, 0, 255));//рисуем синим цветом или фона
	SetPixel(hdc, X1 + 1, Y1, RGB(0, 0, 255));
	SetPixel(hdc, X1, Y1 + 1, RGB(0, 0, 255));
	SetPixel(hdc, X1 + 1, Y1 + 1, RGB(0, 0, 255));
}//end Point::Hide()

 //--------------------------------------------------------------
 //узнать про светимость ТОЧКИ
bool Point::IsVisible(void)
{
	return Visible;
};//end Point::IsVisible()

//--------------------------------------------------------------
//переместить ТОЧКУ
void Point::MoveTo(int NewX1, int NewY1)
{
	Hide();		//сделать точку невидимой
	X1 = NewX1;	//поменять координаты ТОЧКИ
	Y1 = NewY1;
	Show();		//показать точку на новом месте
};//end Point::MoveTo()

 //-------------------------------------------------------------------
//буксировка фигуры
void Point::Drag(int Step)
{
	int FigX, FigY;   //новые координаты фигуры

	FigX = GetX1();    //получаем начальное положение фигуры
	FigY = GetY1();


		//направление движения объекта

		if (KEY_DOWN(VK_LEFT)) //стрелка влево  37
		{
			FigX -= Step;
			MoveTo(FigX, FigY);
			Sleep(100);
		}//end if

		if (KEY_DOWN(VK_RIGHT)) //стрелка вправо  39
		{
			FigX += Step;
			MoveTo(FigX, FigY);
			Sleep(100);
		}//end if

		if (KEY_DOWN(VK_DOWN)) //стрелка вниз  40
		{
			FigY += Step;
			MoveTo(FigX, FigY);
			Sleep(100);
		}//end if

		if (KEY_DOWN(VK_UP)) //стрелка вверх  38
		{
			FigY -= Step;
			MoveTo(FigX, FigY);
			Sleep(100);
		}//end if
}//end Drag()